# 👍 今天是 **Day22（NumPy 切片基础）**，咱们的练习题就围绕 **切片 + 共享内存** 来设计，难度适中，帮助你真正理解“视图”和“复制”的区别。
#  🌟 Day22 练习题
# 题目1：基本切片
# 创建一个一维数组 `a = np.arange(20)`，请你完成以下任务：
# 1. 取出第 5 到第 10 个元素（包含第 5 个，不包含第 10 个）。
# 2. 取出所有偶数索引位置的元素（0,2,4,...）。
# 3. 取出数组的后 5 个元素。
# #### 题目2：修改切片
# 在数组 `a = np.arange(10)` 的基础上：
# 1. 定义 `b = a[2:7]`。
# 2. 将 `b` 的所有元素加 100。
# 3. 打印 `a`，观察变化。
# 👉 思考：为什么 a 也会发生变化？
# #### 题目3：视图 vs 复制
# 在数组 `a = np.arange(10)` 的基础上：
# 1. 定义 `b = a[2:7]`（切片视图）。
# 2. 定义 `c = a[2:7].copy()`（切片复制）。
# 3. 分别修改 `b[0]` 和 `c[0]`，打印 `a`、`b`、`c`。

# 题目4（加分题）：二维切片
# 创建一个二维数组 `m = np.arange(1, 13).reshape(3, 4)`，即：
# [[ 1  2  3  4]
#  [ 5  6  7  8]
#  [ 9 10 11 12]]
# 1. 取出第 2 行（索引 1）。
# 2. 取出第 1 列（索引 0）。
# 3. 取出第 2 到第 3 行、第 2 到第 4 列的子矩阵。
# 题目1
import numpy as  np
a1=np.arange(20)
print(f"a1={a1}")
b1=a1[4:10]
print(f"b1={b1}")
c1=a1[::2]
print(f"c1={c1}")
d1=a1[15:]
# 写成 a1[-5:] 更简洁
print(f"d1={d1}")
# 题目2
a2=np.arange(10)
print(f"a2={a2}")
b2=a2[2:7]
print(f"b2={b2}")
b2 +=100
print(f"b2={b2}")
print(f"a2={a2}")
# a 变化正是numpy的特性 b的切片实际为a的映射 共享同一地址 修改b 实际上也修改了a
# 作业3
a = np.arange(10)
b = a[2:7]         # b 是视图，共享内存
c = a[2:7].copy()   # c 是副本，独立内存
b[0] = 100  # 修改视图 b，会影响 a
c[0] = 200  # 修改副本 c，不会影响 a
print("a:", a)
print("b:", b)
print("c:", c)
# copy创建了新的内存地址 因此修改c不会影响a
# 作业4
m = np.arange(1, 13).reshape(3, 4)
print("m=",m)
n=m[1,:]
print("第二行n=",n)
o=m[:,0]
print("第一列o=",o)
y=m[1:3, 1:4]
print("第 2 到第 3 行、第 2 到第 4 列的子矩阵y=\n",y)